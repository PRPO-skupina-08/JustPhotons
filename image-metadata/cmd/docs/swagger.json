{
    "swagger": "2.0",
    "info": {
        "description": "This is a microservice for managing images' metadata",
        "title": "Swagger Image Metadata API",
        "contact": {},
        "version": "0.1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/metadata": {
            "get": {
                "description": "retrieves many metadata entries based on its query parameters.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Get many Metadata entries",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Maximum amount of returned entries (\u003e0)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Amount of entries left out at the start",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SQL sorting in with pattern `\u003cfield\u003e:\u003corder\u003e[,]...`, first pattern does primary sort, second pattern secondary sort etc.",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Image rating, between 0 and 5 (inclusive)",
                        "name": "rating",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Matching entry",
                        "schema": {
                            "$ref": "#/definitions/types.Metadata"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "404": {
                        "description": "No results",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "creates a new metadata entry in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Insert/create a new Metadata entry",
                "parameters": [
                    {
                        "description": "Insert metadata payload",
                        "name": "metadata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.InsertMetadataPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created new entry",
                        "schema": {
                            "$ref": "#/definitions/types.Metadata"
                        }
                    },
                    "400": {
                        "description": "Incorrect input (missing fields, incorrect data etc.)",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error, but can be caused by database rejecting wrong data (would be a developer's mistake).",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "deletes many metadata entries based on its query parameters. **At least one paramater must be present!**",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Delete many Metadata entries",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Image ID (not the metadata entry's ID)",
                        "name": "image_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Image rating, between 0 and 5 (inclusive)",
                        "name": "rating",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Matching entry"
                    },
                    "400": {
                        "description": "Neither `image_id` nor `rating` specified, but at least one is needed",
                        "schema": {}
                    },
                    "404": {
                        "description": "No results",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/metadata/{id}": {
            "get": {
                "description": "retrieves a specific metadata entry based on its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Get single Metadata entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Metadata entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Matching entry",
                        "schema": {
                            "$ref": "#/definitions/types.Metadata"
                        }
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "404": {
                        "description": "No results",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Deletes a specific metadata entry based on its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Delete a single Metadata entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Metadata entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucessfully deleted"
                    },
                    "400": {
                        "description": "Incorrect input",
                        "schema": {}
                    },
                    "404": {
                        "description": "Nothing to delete",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "types.InsertMetadataPayload": {
            "type": "object",
            "properties": {
                "image_id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                }
            }
        },
        "types.Metadata": {
            "type": "object",
            "properties": {
                "imageId": {
                    "description": "ImageRef uint\nImage    Image `gorm:\"foreignKey:ImageRef\"`",
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                }
            }
        }
    }
}